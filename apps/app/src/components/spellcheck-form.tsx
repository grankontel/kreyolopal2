'use client'
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/8CrEgdl2Y1u
 */
import { useState } from 'react'
import { CopyToClipboard } from 'react-copy-to-clipboard'
import { Label } from '@/components/ui/label'
import { Textarea } from '@/components/ui/textarea'
import { Button } from '@/components/ui/button'
import { IconAttributes, StarRating } from '@kreyolopal/react-ui'
import { SpellcheckResponse } from '@/lib/types'

export function SpellcheckForm() {
  const [request, setRequest] = useState('')
  const [copied, setCopied] = useState(false)
  const [response, setResponse] = useState<SpellcheckResponse>()

  const clearForm = () => {
    setResponse(undefined)
    setCopied(false)
    setRequest('')
  }

  return (
    <div className="w-full max-w-2xl space-y-4">
      <div className="p-4 border border-dashed rounded-lg flex items-center justify-center">
        <form className="w-full space-y-4">
          <div className="grid w-full">
            <Label className="text-base" htmlFor="text">
              Enter your Kreyol text
            </Label>
            <Textarea id="source" name="source"
              placeholder="Enter your Kreyol text here."
              rows={8} value={request}
               
              onChange={(e) => {
                setRequest(e.target.value)
                setCopied(false)
              }
              } />
          </div>
          <div className="flex w-full items-center space-x-2">
            <Button className="w-[140px]" type="submit">
              Check Spelling
            </Button>
            <Button className="w-[80px]" type="button" onClick={() => {clearForm()}}>
              Clear
            </Button>
          </div>
        </form>
      </div>
      <div className="grid w-full gap-2">
        <Label className="text-base" htmlFor="corrected">
          Corrected text
        </Label>
        <div 
        className="flex min-h-[120px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50" 

        id="corrected" dangerouslySetInnerHTML={{ __html: response?.html || '' }} />
        <div className="flex w-full justify-between items-center space-x-2">
          <CopyToClipboard
            text={response?.message || ''}
            onCopy={() => setCopied(true)}
          >
            <Button className="w-[160px]" type="button" disabled={response === undefined}>
              Copy to Clipboard
            </Button>
          </CopyToClipboard>
          <div className="flex items-center space-x-1">
          <StarRating
                  hidden={response === null}
                  
                />

          </div>
        </div>
      </div>
    </div>
  )
}

function StarIcon(props: IconAttributes) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2" />
    </svg>
  )
}
