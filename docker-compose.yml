# Use postgres/example user/password credentials
version: '3.1'

services:

  db:
    image: postgres:14.2-alpine
    container_name: "my_postgres"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - "./initdb:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
      
  adminer:
    image: adminer
    container_name: "adminer"
    restart: always
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      - db

  postgrest:
    image: postgrest/postgrest
    container_name: "postgrest"
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:9000
    ports:
      - "127.0.0.1:9000:3000"
    depends_on:
      - db

  swagger:
    image: swaggerapi/swagger-ui
    container_name: "swagger"
    ports:
      - "9080:8080"
    environment:
      API_URL: http://localhost:9000/
    depends_on:
      - postgrest

  mongo:
    image: mongo
    restart: always
    container_name: "mongo"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./data/mongodb:/data/db
    ports:
      - "27017:27017"

volumes:
  db:
